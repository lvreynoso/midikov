{"version":3,"sources":["../source/server.js"],"names":["result","process","env","NODE_ENV","dotenv","config","exphbs","handlebars","create","exphbsConfig","app","set","PORT","use","bodyParser","urlencoded","extended","json","express","static","mime","types","checkCookie","engine","index","admin","generate","test","hotPort","get","server","listen","console","log"],"mappings":"AAAA,a,CAEA;;;;;;;AACA;;AAIA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AAIA;;AACA;;;;AAxBA,MAAMA,MAAM,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,aAAzB,GAA0CC,gBAAOC,MAAP,EAA1C,GAA4D,KAA3E,C,CAEA;;AAkBA,MAAMC,MAAM,GAAGC,2BAAWC,MAAX,CAAkBC,qBAAlB,CAAf,C,CAEA;;;AAIA;AACA,MAAMC,GAAG,GAAG,uBAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBV,OAAO,CAACC,GAAR,CAAYU,IAAZ,IAAoB,IAApC;AACAF,GAAG,CAACG,GAAJ,CAAQC,oBAAWC,UAAX,CAAsB;AAC1BC,EAAAA,QAAQ,EAAE;AADgB,CAAtB,CAAR;AAGAN,GAAG,CAACG,GAAJ,CAAQC,oBAAWG,IAAX,EAAR;AACAP,GAAG,CAACG,GAAJ,CAAQK,iBAAQC,MAAR,CAAe,QAAf,CAAR;AACAD,iBAAQC,MAAR,CAAeC,IAAf,CAAoBC,KAApB,CAA0B,MAA1B,IAAoC,kBAApC;AACAX,GAAG,CAACG,GAAJ,CAAQ,gCAAR;AACAH,GAAG,CAACG,GAAJ,CAAQ,4BAAR;AACAH,GAAG,CAACG,GAAJ,CAAQS,oBAAR,E,CAEA;;AACAZ,GAAG,CAACa,MAAJ,CAAW,YAAX,EAAyBjB,MAAM,CAACiB,MAAhC;AACAb,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,YAAvB,E,CAEA;;AACAD,GAAG,CAACG,GAAJ,CAAQ,GAAR,EAAaW,cAAb;AACAd,GAAG,CAACG,GAAJ,CAAQ,QAAR,EAAkBY,cAAlB;AACAf,GAAG,CAACG,GAAJ,CAAQ,WAAR,EAAqBa,iBAArB;AACAhB,GAAG,CAACG,GAAJ,CAAQ,OAAR,EAAiBc,aAAjB,E,CAEA;;AACA,MAAMC,OAAO,GAAGlB,GAAG,CAACmB,GAAJ,CAAQ,MAAR,CAAhB;AACA,MAAMC,MAAM,GAAGpB,GAAG,CAACqB,MAAJ,CAAWH,OAAX,EAAoB,MAAM;AACrCI,EAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBL,OAAQ,GAA7C;AACH,CAFc,CAAf,C,CAIA;;eACeE,M","sourcesContent":["'use strict'\n\n// environment setup\nimport dotenv from 'dotenv'\nconst result = (process.env.NODE_ENV == 'development') ? dotenv.config() : false\n\n// dependencies\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport handlebars from 'express-handlebars'\nimport expressValidator from 'express-validator'\nimport cookieParser from 'cookie-parser'\n\n// controllers\nimport index from './controllers/index.js'\nimport admin from './controllers/admin.js'\nimport generate from './controllers/generate.js'\nimport test from './controllers/test.js'\n\n// db and models\nimport database from './database/database.js'\n\n// handlebars helpers\nimport exphbsConfig from './config/exphbs-config.js'\nconst exphbs = handlebars.create(exphbsConfig);\n\n// middleware\nimport checkAuth from './lib/check-auth.js'\nimport checkCookie from './lib/check-cookie.js'\n\n// set our express options\nconst app = express();\napp.set('port', process.env.PORT || 3000);\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\napp.use(bodyParser.json());\napp.use(express.static('public'));\nexpress.static.mime.types['wasm'] = 'application/wasm'\napp.use(expressValidator());\napp.use(cookieParser());\napp.use(checkCookie);\n\n// set our view engine\napp.engine('handlebars', exphbs.engine);\napp.set('view engine', 'handlebars');\n\n// routes\napp.use('/', index)\napp.use('/admin', admin)\napp.use('/generate', generate)\napp.use('/test', test)\n\n// face the world\nconst hotPort = app.get('port')\nconst server = app.listen(hotPort, () => {\n    console.log(`App listening on port ${hotPort}!`)\n})\n\n// for Mocha/Chai test purposes\nexport default server;\n"],"file":"server.js"}