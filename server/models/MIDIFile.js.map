{"version":3,"sources":["../../source/models/MIDIFile.js"],"names":["Schema","mongoose","MIDISchema","title","type","String","required","library","Boolean","category","data","Buffer","MIDIFile","model"],"mappings":";;;;;;;AAIA;;;;AAJA;AACA;AACA;AAGA,MAAMA,MAAM,GAAGC,kBAASD,MAAxB;AAEA,MAAME,UAAU,GAAG,IAAIF,MAAJ,CAAW;AAC1BG,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADmB;AAE1BC,EAAAA,OAAO,EAAE;AAAEH,IAAAA,IAAI,EAAEI,OAAR;AAAiBF,IAAAA,QAAQ,EAAE;AAA3B,GAFiB;AAG1BG,EAAAA,QAAQ,EAAE;AAAEL,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GAHgB;AAI1BI,EAAAA,IAAI,EAAEC;AAJoB,CAAX,CAAnB;;AAOA,MAAMC,QAAQ,GAAGX,kBAASY,KAAT,CAAe,UAAf,EAA2BX,UAA3B,CAAjB;;eACeU,Q","sourcesContent":["// MIDIFile.js\n// Model for storing our music in the form of MIDI files\n// straight binary data\n\nimport mongoose from 'mongoose'\nconst Schema = mongoose.Schema;\n\nconst MIDISchema = new Schema({\n    title: { type: String, required: true },\n    library: { type: Boolean, required: true},\n    category: { type: String, required: true },\n    data: Buffer\n});\n\nconst MIDIFile = mongoose.model('MIDIFile', MIDISchema);\nexport default MIDIFile;\n"],"file":"MIDIFile.js"}